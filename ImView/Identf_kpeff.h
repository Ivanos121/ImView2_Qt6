#ifndef IDENTF_KPEFF_H
#define IDENTF_KPEFF_H

#include <QVector>

struct KoeffBase {
    int speed;
    virtual ~KoeffBase() = default; // виртуальный деструктор
    std::string name;
    QVector<QVector<double>> koeffs;
    KoeffBase(int _speed, QVector<QVector<double>> _koeffs) : speed(_speed), koeffs(_koeffs) {};
    KoeffBase() : speed(0), koeffs(0) {};
};

struct Koeff_ad
{
    KoeffBase koeff_3000;
    KoeffBase koeff_1500;
    KoeffBase koeff_1000;
    KoeffBase  koeff_750;

    std::vector<KoeffBase> allKoeffs;

    Koeff_ad() : koeff_3000(3000, {
                               {1100, 1500, 2200, 3000, 4000, 5500, 7500, 11000, 15000, 18500},//Мощность двигателя
                               {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                               {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                               {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                               {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                               {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                               {1, 2, 3, 4, 5, 6, 6, 7, 8, 9}                //Коэффициент gd
                           }),
        koeff_1500(1500, {
                             {1100, 1500, 2200, 3000, 4000, 5500, 7500, 11000, 15000, 18500},//Мощность двигателя
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9}                //Коэффициент gd
                         }),
        koeff_1000(1000, {
                             {1100, 1500, 2200, 3000, 4000, 5500, 7500, 11000, 15000, 18500},//Мощность двигателя
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                             {1, 2, 3, 4, 5, 6, 6, 7, 8, 9}                //Коэффициент gd
                         }),
        koeff_750(750, {
                           {1100, 1500, 2200, 3000, 4000, 5500, 7500, 11000, 15000, 18500},//Мощность двигателя
                           {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                           {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                           {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                           {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                           {1, 2, 3, 4, 5, 6, 6, 7, 8, 9},               //Коэффициент gd
                           {1, 2, 3, 4, 5, 6, 6, 7, 8, 9}                //Коэффициент gd
                       })
    {
        allKoeffs.push_back(koeff_3000);
        allKoeffs.push_back(koeff_1500);
        allKoeffs.push_back(koeff_1000);
        allKoeffs.push_back(koeff_750);
    }
};

extern struct Koeff_ad koeff_ad;

#endif // IDENTF_KPEFF_H
